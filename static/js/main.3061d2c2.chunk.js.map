{"version":3,"sources":["container/Page.jsx","container/Page2.jsx","container/Chart.jsx","container/Hooks.jsx","container/Head.jsx","container/Aside.jsx","container/Main.jsx","container/Login.jsx","container/App.jsx","serviceWorker.js","index.js"],"names":["Page","react_default","a","createElement","className","Page2","Chart","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","renderChart","myChart","echarts","init","document","getElementById","setOption","title","text","tooltip","xAxis","data","yAxis","series","name","type","window","addEventListener","resize","id","style","width","height","React","Component","setStorage","arguments","length","undefined","list","localStorage","setItem","JSON","stringify","Hooks","_useState","useState","storage","getItem","parse","getStorage","_useState2","slicedToArray","todoList","setTodoList","useEffect","_useState3","_useState4","value","setValue","_useState5","_useState6","newValue","setNewValue","input_default","placeholder","onChange","e","val","target","onKeyDown","keyCode","item","createTime","Date","now","isEditting","newList","concat","toConsumableArray","button_default","onClick","map","index","key","onBlur","format","icon_default","forEach","idx","splice","Head","SubMenu","menu_default","menuList","path","icon","Aside","curPath","setCurPath","defaultSelectedKeys","defaultOpenKeys","mode","clName","children","Item","goPage","Main","container_Head","history","push","container_Aside","react_router","exact","component","Login","classNam","App","Boolean","location","hostname","match","ReactDOM","render","react_router_dom","container_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3061d2c2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Page = () => {\r\n    return (\r\n        <div className=\"app-main\">\r\n            Page1-main\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Page;","import React from 'react';\r\n\r\nconst Page2 = () => {\r\n\treturn <div className=\"app-main\">Page2-main</div>;\r\n};\r\n\r\nexport default Page2;\r\n","import React from 'react';\r\nimport echarts from 'echarts/lib/echarts';\r\n\r\n// 引入柱状图\r\nimport 'echarts/lib/chart/line';\r\nimport 'echarts/lib/chart/bar';\r\n// 引入提示框和标题组件\r\nimport 'echarts/lib/component/tooltip';\r\nimport 'echarts/lib/component/title';\r\nimport 'echarts/lib/component/legend';\r\n\r\nclass Chart extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.renderChart();\r\n    }\r\n\r\n    renderChart() {\r\n        let myChart = echarts.init(document.getElementById('chartContainer'));\r\n        // 绘制图表\r\n        myChart.setOption({\r\n            title: { text: 'ECharts 入门示例' },\r\n            tooltip: {},\r\n            xAxis: {\r\n                data: [\"衬衫\", \"羊毛衫\", \"雪纺衫\", \"裤子\", \"高跟鞋\", \"袜子\"]\r\n            },\r\n            yAxis: {},\r\n            series: [{\r\n                name: '销量',\r\n                type: 'bar',\r\n                data: [5, 20, 36, 10, 10, 20]\r\n            }]\r\n        });\r\n        window.addEventListener('resize', function () {\r\n            myChart.resize();\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"chart-container\" id=\"chartContainer\" style={{ width: '500px', height: '500px' }}>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { Button, Input, Icon } from 'antd';\r\nimport { format } from 'date-fns';\r\n\r\nconst getStorage = (name) => {\r\n    let storage = window.localStorage.getItem(name);\r\n    let data = [];\r\n    if (storage) {\r\n        data = JSON.parse(storage);\r\n    }\r\n    return data;\r\n}\r\nconst setStorage = (name = '', list = []) => {\r\n    window.localStorage.setItem(name, JSON.stringify(list));\r\n}\r\n\r\nconst Hooks = (props) => {\r\n    const [todoList, setTodoList] = useState(getStorage('hooksList'));\r\n    useEffect(() => {\r\n        // console.log('list:', todoList);\r\n    });\r\n\r\n    const [value, setValue] = useState('');\r\n    useEffect(() => {\r\n        // console.log('value:', value);\r\n    });\r\n\r\n    const [newValue, setNewValue] = useState('');\r\n    useEffect(() => {\r\n        // console.log('setNewValue:', setNewValue);\r\n    });\r\n\r\n    return (\r\n        <div className=\"todo-container\">\r\n            <h1>react-hooks-demo</h1>\r\n            <div className=\"add-box\">\r\n                <span className=\"add-input\">\r\n                    <Input placeholder=\"add todo...\" value={value} onChange={(e) => {\r\n                        let val = e.target.value;\r\n                        setValue(val);\r\n                    }} onKeyDown={(e) => {\r\n                        if (value === '') {\r\n                            return false;\r\n                        }\r\n                        let keyCode = e.keyCode;\r\n                        if (keyCode === 13) {\r\n                            let item = {\r\n                                name: value,\r\n                                createTime: Date.now(),\r\n                                isEditting: false\r\n                            };\r\n                            let newList = [...todoList, item];\r\n                            setTodoList(newList);\r\n                            setValue('');\r\n                            setStorage('hooksList', newList);\r\n                        }\r\n                    }} />\r\n                </span>\r\n                <span className=\"add-button\">\r\n                    <Button type=\"primary\" onClick={() => {\r\n                        let item = {\r\n                            name: value,\r\n                            createTime: Date.now(),\r\n                            isEditting: false\r\n                        };\r\n                        let newList = [...todoList, item];\r\n                        setTodoList(newList);\r\n                        setValue('');\r\n                        setStorage('hooksList', newList);\r\n                    }}>ADD</Button>\r\n                </span>\r\n            </div>\r\n            <ul className=\"todo-list-box\">\r\n                {\r\n                    todoList.map((item, index) => {\r\n                        let { name, createTime, isEditting } = item;\r\n                        return (\r\n                            <li key={index}>\r\n                                <span className=\"item-index\">{index + 1}</span>\r\n                                <span className=\"item-dot\">:</span>\r\n                                {\r\n                                    isEditting ? <Input value={newValue} className=\"edit-name\" onChange={(e) => {\r\n                                        let val = e.target.value;\r\n                                        setNewValue(val);\r\n                                    }} onBlur={(e) => {\r\n                                        if (newValue === '') {\r\n                                            return false\r\n                                        }\r\n                                        todoList[index]['name'] = newValue;\r\n                                        todoList[index]['isEditting'] = false;\r\n                                        let newList = [...todoList];\r\n                                        setTodoList(newList);\r\n                                        setStorage('hooksList', newList);\r\n                                    }} /> : <span className=\"todo-name\">{name}</span>\r\n                                }\r\n                                <span>{format(createTime, 'YYYY-MM-DD hh:mm:ss')}</span>\r\n                                <Icon type=\"edit\" onClick={() => {\r\n                                    let newValue = '';\r\n                                    todoList.forEach((item, idx) => {\r\n                                        if (index === idx) {\r\n                                            newValue = item.name;\r\n                                            item.isEditting = true;\r\n                                        } else {\r\n                                            item.isEditting = false;\r\n                                        }\r\n                                    })\r\n                                    setNewValue(newValue);\r\n                                    let newList = [...todoList];\r\n                                    setTodoList(newList);\r\n                                    setStorage('hooksList', newList);\r\n                                }} />\r\n                                <Icon type=\"delete\" onClick={() => {\r\n                                    todoList.splice(index, 1);\r\n                                    let newList = [...todoList];\r\n                                    setTodoList(newList);\r\n                                    setValue('');\r\n                                    setStorage('hooksList', newList);\r\n                                }} />\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Hooks","import React from 'react';\r\nimport './head.scss';\r\n\r\nconst Head = (props) => {\r\n    return (\r\n        <div className=\"app-header\">\r\n            <div className=\"app-logo\">React-app-demo</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Head;","import React, { useState, useEffect } from 'react';\r\nimport { Menu, Icon } from 'antd';\r\nconst SubMenu = Menu.SubMenu;\r\n\r\nconst menuList = [\r\n\t{\r\n\t\tpath: '/',\r\n\t\tname: 'page1',\r\n\t\ticon: 'calendar'\r\n\t},\r\n\t{\r\n\t\tpath: '/main/page2',\r\n\t\tname: 'page2',\r\n\t\ticon: 'mail'\r\n\t},\r\n\t{\r\n\t\tpath: '/main/chart',\r\n\t\tname: 'chart',\r\n\t\ticon: 'bar-chart'\r\n\t},\r\n\t{\r\n\t\tpath: '/main/hooks',\r\n\t\tname: 'hooks',\r\n\t\ticon: 'appstore',\r\n\t}\r\n];\r\n\r\nconst Aside = (props) => {\r\n\tconst [curPath, setCurPath] = useState('/');\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\t// console.log('curPath:', curPath);\r\n\t\t},\r\n\t\t[curPath]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div className=\"aside-container\">\r\n\t\t\t<Menu\r\n\t\t\t\tstyle={{ width: '100%', height: '100%' }}\r\n\t\t\t\tdefaultSelectedKeys={['/']}\r\n\t\t\t\tdefaultOpenKeys={['/page']}\r\n\t\t\t\tmode={'inline'}\r\n\t\t\t>\r\n\t\t\t\t{\r\n\t\t\t\t\tmenuList.map((item) => {\r\n\t\t\t\t\t\tlet clName = curPath === item.path ? 'active' : '';\r\n\t\t\t\t\t\tlet children = item.children || [];\r\n\t\t\t\t\t\tlet { name, icon, path } = item;\r\n\t\t\t\t\t\tif (children.length === 0) {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Menu.Item key={path} className={clName} onClick={(e) => {\r\n\t\t\t\t\t\t\t\t\tprops.goPage(e, item.path);\r\n\t\t\t\t\t\t\t\t\tsetCurPath(item.path);\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t<Icon type={icon} />\r\n\t\t\t\t\t\t\t\t\t{name}\r\n\t\t\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<SubMenu key={path} title={<span><Icon type={icon} /><span>{name}</span></span>} onClick={(e) => {\r\n\t\t\t\t\t\t\t\t\tprops.goPage(e, item.path);\r\n\t\t\t\t\t\t\t\t\tsetCurPath(item.path);\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tchildren.map(val => {\r\n\t\t\t\t\t\t\t\t\t\t\tlet { name, path } = val;\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Menu.Item key={path}>{name}</Menu.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</SubMenu>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</Menu>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Aside;\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router';\r\n\r\nimport Page from './Page';\r\nimport Page2 from './Page2';\r\nimport Chart from './Chart';\r\nimport Hooks from './Hooks';\r\nimport Head from './Head';\r\nimport Aside from './Aside';\r\n\r\nconst Main = (props) => {\r\n\treturn (\r\n\t\t<div className=\"app-container\">\r\n\t\t\t<div className=\"app-head\">\r\n\t\t\t\t<Head\r\n\t\t\t\t\thistory={props.history}\r\n\t\t\t\t\tgoPage={(e, path) => {\r\n\t\t\t\t\t\tprops.history.push(path);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"main-container\">\r\n\t\t\t\t<div className=\"app-aside\">\r\n\t\t\t\t\t<Aside\r\n\t\t\t\t\t\tgoPage={(e, path) => {\r\n\t\t\t\t\t\t\tprops.history.push(path);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\thistory={props.history}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"app-content\">\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route path=\"/\" exact component={Page} />\r\n\t\t\t\t\t\t<Route path=\"/main/page\" component={Page} />\r\n\t\t\t\t\t\t<Route path=\"/main/page2\" component={Page2} />\r\n\t\t\t\t\t\t<Route path=\"/main/chart\" component={Chart} />\r\n\t\t\t\t\t\t<Route path=\"/main/hooks\" component={Hooks} />\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\n\r\nconst Login = () => {\r\n\treturn <div classNam=\"app-login\">app-login-app</div>;\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport './app.scss';\r\n\r\nimport Main from './Main';\r\nimport Login from './Login';\r\n\r\nconst App = () => {\r\n\treturn (\r\n\t\t<div className=\"app-container\">\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"/\" component={Main} />\r\n\t\t\t\t<Route path=\"/login\" component={Login} />\r\n\t\t\t\t<Route exact component={Main} />\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './container/App';\r\nimport {HashRouter,BrowserRouter} from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter >\r\n        <App />\r\n    </BrowserRouter>, \r\n    document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}